rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {

  //functions
  		function isSignedIn() {
      return request.auth != null;
      }
       function getUserData() {
       return get(/databases/$(database)/documents/users/$(request.auth.uid)).data
    	}
      function getGymData(gid) {
       return get(/databases/$(database)/documents/gyms/$(gid)).data
    	}
      function getSubscriberData(gid) {
       return get(/databases/$(database)/documents/gyms/$(gid)/subscribers/$(request.auth.uid)).data
    	}
      function isManager(gid) {
      return getSubscriberData(gid).role == 'manager';
      }
      function isGymAdmin(gid) {
      return getSubscriberData(gid).role == 'admin';
      }
      function isSubscriber(gid) {
      return getSubscriberData(gid).status == 'actif';
      }
    	function isAdmin() {
      return getUserData().role == 'admin';
      }
      function isOwner() {
      return getUserData().role == 'BO';
			}
   		function editOnlyChangesFields(allowedFields) {
      let affectedKeys = request.resource.data.diff(resource.data).affectedKeys();
      return (affectedKeys).hasOnly(allowedFields);
      }

    match /{document=**} {
      allow read: if isSignedIn();

  }

  match /users/{uid} {
      allow create: if request.auth.uid == uid && (request.resource.data.keys().hasOnly(
        ['verificationSent', 'id', 'image', 'firstname', 'lastname', 'fullname',
        'searchableIndex', 'dateCreated', 'ipAddress', 'score', 'chatNotifCount', 'notifCount',
        'fcmTokens', 'poids', 'taille', 'tel', 'cin', 'tu1', 'tu2', 'tu3', 'adresse', 'fb', 'ig', 'profession', 'birthdate',
        'email', 'sexe', 'health', 'autreInfo', 'allergie', 'allergieDetails']));
      allow update: if request.auth.uid == uid &&
      editOnlyChangesFields(['verificationSent', 'id', 'image', 'firstname', 'lastname', 'fullname',
        'searchableIndex', 'dateCreated', 'ipAddress', 'score', 'chatNotifCount', 'notifCount',
        'fcmTokens', 'tel', 'cin', 'tu1', 'tu2', 'tu3', 'adresse', 'fb', 'ig', 'profession', 'birthdate',
        'sexe', 'health', 'poids', 'taille','autreInfo', 'allergie', 'allergieDetails']) || isAdmin();

        match /reservations/{id} {
          	allow create: if request.auth.uid == request.resource.data.userId && isSubscriber(request.resource.data.gymId);
            allow update: if request.auth.uid == resource.data.userId && isSubscriber(resource.data.gymId) || isManager(resource.data.gymId) ;
            allow delete: if request.auth.uid == resource.data.userId && isSubscriber(resource.data.gymId);
    	  }


        match /subscriptions/{id} {
    allow write: if isAdmin();
      }

		}


    match /gyms/{gid} {
    allow create: if request.auth.uid == request.resource.data.ownerId && isOwner() || isAdmin();
    allow update: if request.auth.uid == resource.data.ownerId || isAdmin();
    allow delete: if request.auth.uid == resource.data.ownerId || isAdmin();

    match /subscribers/{id} {
    allow create: if request.auth.uid == getGymData(gid).ownerId || isGymAdmin(gid) || isManager(gid) || isAdmin();
    allow update: if isGymAdmin(gid) || isManager(gid) || isAdmin();
    allow delete: if isGymAdmin(gid) || isManager(gid) || isAdmin();
      }
    match /demandes/{id} {
    allow create: if request.auth.uid == request.resource.data.userId;
    allow update: if isGymAdmin(gid) || isManager(gid) || isAdmin();
    allow delete: if isGymAdmin(gid) || isManager(gid) || isAdmin();
      }
    match /calendar/{id} {
   		allow create: if isGymAdmin(gid) || isManager(gid) || isAdmin();
    	allow update: if isGymAdmin(gid) || isManager(gid) || isAdmin();
    	allow delete: if isGymAdmin(gid) || isManager(gid) || isAdmin();

    	match /hours/{id} {
				allow create: if isGymAdmin(gid) || isManager(gid) || isAdmin();
    		allow update: if isSubscriber(gid) || isGymAdmin(gid) || isManager(gid) || isAdmin();
    		allow delete: if isGymAdmin(gid) || isManager(gid) || isAdmin();

        	match /users/{id} {
          	allow write: if request.auth.uid == request.resource.data.userId && isSubscriber(gid);
    	  }
      }
    }

    match /categories/{id} {
    allow create: if isGymAdmin(gid) || isManager(gid) || isAdmin();
    allow update: if isGymAdmin(gid) || isManager(gid) || isAdmin();
    allow delete: if isGymAdmin(gid) || isManager(gid) || isAdmin();
      }
    match /cours/{id} {
    allow create: if isGymAdmin(gid) || isManager(gid) || isAdmin();
    allow update: if isGymAdmin(gid) || isManager(gid) || isAdmin();
    allow delete: if isGymAdmin(gid) || isManager(gid) || isAdmin();
      }


    }



}
}
